openapi: 3.0.0
tags:
  - name: policy
  - name: BusinessTime
  - name: Issuance
  - name: Configuration
  - name: Claims
info:
  title: InsurancePolicy
  version: '1.0'
  contact:
    name: Andrey
    email: andrey@covergo.com
  license:
    name: MIT
  description: API for communicating with Insurance Policy domain
servers:
  - url: 'http://localhost:4010'
    description: Local Prism (requires setup)
  - url: 'http://localhost:5000'
    description: Local Asp.Net Core HTTP
  - url: 'https://localhost:5001'
    description: Local Asp.Net Core HTTPS
paths:
  /policy:
    get:
      summary: Get policies
      tags:
        - policy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyState'
              examples:
                example-1:
                  value:
                    - issued: true
                      duration: null
                      issueDate: '2019-08-24T14:15:22Z'
                      expiryDate: null
                      isExpired: true
                      amount: 0
                      businessTime: '2019-08-24T14:15:22Z'
      operationId: get-policy
      parameters: []
      description: Returns the list of existing policies
    post:
      tags:
        - policy
      summary: Create policy
      operationId: post-policy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyId'
              examples:
                example-1:
                  value: string
        '400':
          description: Bad Request
      description: 'Create a new policy. If successfull, will return id of created policy.'
      parameters: []
    options:
      summary: ''
      operationId: options-policy
      responses:
        '200':
          description: OK
      description: Support for Chrome CORS checks
  '/policy/{policyId}':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
        description: id of the policy for the operation
    get:
      summary: Get policy details
      tags:
        - policy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyState'
        '404':
          description: Not Found
      operationId: get-policy-policyId
      description: Get a specific insurance policy by id
      parameters: []
  '/policy/{policyId}/issuance':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
    get:
      summary: Get issuance requests
      tags:
        - Issuance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssuanceWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-state
      description: 'Get the information about this policy issuance requests '
    post:
      summary: Create issuance request
      operationId: post-policy-policyId-issuance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: 'Issue target policy. Issue intent id will be generated and returned. '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuanceRequest'
      tags:
        - Issuance
  '/policy/{policyId}/issuance/{issuanceId}':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
      - schema:
          type: string
        name: issuanceId
        in: path
        required: true
    get:
      summary: Get issuance request details
      tags:
        - Issuance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuanceWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-issuance-issuanceId
      description: Get status of an issuance request
  '/policy/{policyId}/configurations':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
    get:
      summary: Get policy configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-configurations
      description: Get information about configurations happend to a policy
      tags:
        - Configuration
    post:
      summary: Create policy configuration
      operationId: post-policy-policyId-configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: Raise new configuration request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      tags:
        - Configuration
  '/policy/{policyId}/configurations/{configurationId}':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
      - schema:
          type: string
        name: configurationId
        in: path
        required: true
    get:
      summary: Get policy configuration details
      tags:
        - Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-configurations-configurationId
      description: Get information about a configuration request
  '/policy/{policyId}/businesstime':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
    get:
      summary: Get policy business time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTime'
        '404':
          description: Not Found
      operationId: get-policy-policyId-businesstime
      description: Get business time of the policy
      parameters: []
      tags:
        - BusinessTime
    post:
      summary: Override policy business time
      operationId: postpolicy-policyId-businesstime
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: 'Set the businees time of the policy. Needs additional permission. '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessTime'
      tags:
        - BusinessTime
  '/policy/{policyId}/claim':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
    get:
      summary: Get policy claims
      tags:
        - Claims
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-claims
      description: |
        Get a list of claims submitted for this policy
    post:
      summary: Submit policy claim
      operationId: post-policy-policyId-claim
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '404':
          description: Not Found
      description: Submit a new claim against policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
      tags:
        - Claims
  '/policy/{policyId}/claim/{claimId}':
    parameters:
      - schema:
          type: string
        name: policyId
        in: path
        required: true
      - schema:
          type: string
        name: claimId
        in: path
        required: true
    get:
      summary: Get policy claim details
      tags:
        - Claims
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimWithStatus'
        '404':
          description: Not Found
      operationId: get-policy-policyId-claim-claimId
      description: Gets information about a specified claim submitted for this policy
components:
  schemas:
    RequestState:
      type: string
      title: RequestState
      enum:
        - pending
        - received
        - processing
        - completed
        - rejected
      default: pending
      description: 'Status of a request sent  '
    PolicyState:
      description: State of an insurance policy
      type: object
      title: ''
      properties:
        issued:
          type: boolean
        duration:
          $ref: '#/components/schemas/Duration'
        issueDate:
          type: string
          minLength: 1
          default: null
          format: date-time
        expiryDate:
          type: string
          nullable: true
          format: date-time
          default: null
        isExpired:
          type: boolean
        amount:
          $ref: '#/components/schemas/Amount'
        businessTime:
          type: string
          minLength: 1
          format: date-time
        id:
          type: string
      required:
        - issued
        - isExpired
        - id
    PolicyId:
      title: PolicyId
      type: string
      description: 'Id of a Policy, must be unique'
    Amount:
      type: integer
      title: Amount
      description: 'Money amount, in USD cents'
      format: int32
      minimum: 1
    Duration:
      type: integer
      title: Duration
      description: 'Duration, in seconds'
      format: int64
      minimum: 0
    IssuanceRequest:
      title: IssuanceRequest
      type: object
      description: 'A request to issue a policy at given time. '
      properties:
        policyId:
          type: string
        issueTime:
          type: string
          nullable: true
          format: date-time
          default: 'null'
          description: |
            Time when policy should be issued. Can be null for immediate issue or a moment in the future
    RequestStatus:
      title: RequestStatus
      type: object
      description: ''
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/RequestState'
        error:
          type: string
          nullable: true
    BusinessTime:
      type: string
      title: BusinessTime
      format: date-time
      description: ''
    Configuration:
      title: Configuration
      type: object
      properties:
        requestId:
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        duration:
          $ref: '#/components/schemas/Duration'
        policyId:
          $ref: '#/components/schemas/PolicyId'
    Claim:
      title: Claim
      type: object
      description: A claim filled towards a policy
      properties:
        id:
          type: string
        amount:
          $ref: '#/components/schemas/ClaimAmount'
    ClaimAmount:
      type: integer
      title: ClaimAmount
      format: int32
      minimum: 0
      description: 'mney to claim from the policy, in USD cents'
    IssuanceWithStatus:
      title: IssuanceWithStatus
      type: object
      properties:
        issuance:
          $ref: '#/components/schemas/IssuanceRequest'
        status:
          $ref: '#/components/schemas/RequestStatus'
      description: 'Issuance request with its status '
    ConfigurationWithStatus:
      title: ConfigurationWithStatus
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/Configuration'
        status:
          $ref: '#/components/schemas/RequestStatus'
      description: Configuration request details with its status
    ClaimWithStatus:
      title: ClaimWithStatus
      type: object
      properties:
        claim:
          $ref: '#/components/schemas/Claim'
        status:
          $ref: '#/components/schemas/RequestStatus'
      description: Claim information with its status
  securitySchemes:
    AccessToken:
      name: APIKey
      type: apiKey
      in: header
security:
  - AccessToken: []
